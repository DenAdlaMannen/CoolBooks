// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Coolbooks.Models;

public partial class CoolBookContext : DbContext
{
    public CoolBookContext(DbContextOptions<CoolBookContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Authors> Authors { get; set; }

    public virtual DbSet<Books> Books { get; set; }

    public virtual DbSet<Genres> Genres { get; set; }

    public virtual DbSet<Reviews> Reviews { get; set; }

    public virtual DbSet<Userinfo> Userinfo { get; set; }

    public virtual DbSet<Users> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Authors>(entity =>
        {
            entity.HasKey(e => e.AuthorId).HasName("PK__Authors__70DAFC146B7E6384");

            entity.Property(e => e.AuthorId)
                .ValueGeneratedNever()
                .HasColumnName("AuthorID");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.Efternamn).HasMaxLength(250);
            entity.Property(e => e.Firstname).HasMaxLength(250);
        });

        modelBuilder.Entity<Books>(entity =>
        {
            entity.HasKey(e => e.BookId).HasName("PK__Books__3DE0C2274E735BF0");

            entity.Property(e => e.BookId)
                .ValueGeneratedNever()
                .HasColumnName("BookID");
            entity.Property(e => e.AuthorId).HasColumnName("AuthorID");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(250);
            entity.Property(e => e.GenreId).HasColumnName("GenreID");
            entity.Property(e => e.Imagepath).HasMaxLength(250);
            entity.Property(e => e.Isbn)
                .HasMaxLength(250)
                .HasColumnName("ISBN");
            entity.Property(e => e.Title).HasMaxLength(250);
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.Author).WithMany(p => p.Books)
                .HasForeignKey(d => d.AuthorId)
                .HasConstraintName("FK__Books__AuthorID__44FF419A");

            entity.HasOne(d => d.Genre).WithMany(p => p.Books)
                .HasForeignKey(d => d.GenreId)
                .HasConstraintName("FK__Books__GenreID__45F365D3");

            entity.HasOne(d => d.User).WithMany(p => p.Books)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Books__UserID__440B1D61");
        });

        modelBuilder.Entity<Genres>(entity =>
        {
            entity.HasKey(e => e.GenreId).HasName("PK__Genres__0385055E97CE0777");

            entity.Property(e => e.GenreId)
                .ValueGeneratedNever()
                .HasColumnName("GenreID");
            entity.Property(e => e.Description).HasMaxLength(250);
            entity.Property(e => e.Name).HasMaxLength(250);
        });

        modelBuilder.Entity<Reviews>(entity =>
        {
            entity.HasKey(e => e.ReviewId).HasName("PK__Reviews__74BC79AE3238230A");

            entity.Property(e => e.ReviewId)
                .ValueGeneratedNever()
                .HasColumnName("ReviewID");
            entity.Property(e => e.BookId).HasColumnName("BookID");
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.Rating).HasMaxLength(250);
            entity.Property(e => e.Text).HasMaxLength(250);
            entity.Property(e => e.Title).HasMaxLength(250);
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.Book).WithMany(p => p.Reviews)
                .HasForeignKey(d => d.BookId)
                .HasConstraintName("FK__Reviews__BookID__4222D4EF");

            entity.HasOne(d => d.User).WithMany(p => p.Reviews)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Reviews__UserID__4316F928");
        });

        modelBuilder.Entity<Userinfo>(entity =>
        {
            entity.HasKey(e => e.UserInfoId).HasName("PK__Userinfo__D07EF2C4D00683BD");

            entity.Property(e => e.UserInfoId)
                .ValueGeneratedNever()
                .HasColumnName("UserInfoID");
            entity.Property(e => e.Address).HasMaxLength(250);
            entity.Property(e => e.Created).HasColumnType("datetime");
            entity.Property(e => e.Firstname).HasMaxLength(50);
            entity.Property(e => e.Lastname).HasMaxLength(50);
            entity.Property(e => e.Phone).HasMaxLength(250);
            entity.Property(e => e.Role).HasMaxLength(50);
        });

        modelBuilder.Entity<Users>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CCACA057E8B4");

            entity.Property(e => e.UserId)
                .ValueGeneratedNever()
                .HasColumnName("UserID");
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.PasswordHash).HasMaxLength(250);
            entity.Property(e => e.SecurityStamp).HasMaxLength(250);
            entity.Property(e => e.UserinfoId).HasColumnName("UserinfoID");

            entity.HasOne(d => d.Userinfo).WithMany(p => p.Users)
                .HasForeignKey(d => d.UserinfoId)
                .HasConstraintName("FK__Users__UserinfoI__412EB0B6");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}